[0m################ Profiling started at 20240212-220618 ################.[0m
[0mProvided parameters: profile(function=Conv2dRFFTFunction timestamp=20240212-220618 batch_size=64 profile_name=ResNet18_CIFAR100_Conv2dRFFTFunction num_classes=100 skip_first=0 wait=4 warmup=4 active=4 repeat=1)[0m
[0mOriginal model architecture is ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc): Linear(in_features=512, out_features=1000, bias=True)
)[0m
[0mAdopted model architecture is ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc): Linear(in_features=512, out_features=100, bias=True)
)[0m
[0m(0) parameter.requires_grad = True[0m
[0m(1) parameter.requires_grad = True[0m
[0m(2) parameter.requires_grad = True[0m
[0m(3) parameter.requires_grad = True[0m
[0m(4) parameter.requires_grad = True[0m
[0m(5) parameter.requires_grad = True[0m
[0m(6) parameter.requires_grad = True[0m
[0m(7) parameter.requires_grad = True[0m
[0m(8) parameter.requires_grad = True[0m
[0m(9) parameter.requires_grad = True[0m
[0m(10) parameter.requires_grad = True[0m
[0m(11) parameter.requires_grad = True[0m
[0m(12) parameter.requires_grad = True[0m
[0m(13) parameter.requires_grad = True[0m
[0m(14) parameter.requires_grad = True[0m
[0m(15) parameter.requires_grad = True[0m
[0m(16) parameter.requires_grad = True[0m
[0m(17) parameter.requires_grad = True[0m
[0m(18) parameter.requires_grad = True[0m
[0m(19) parameter.requires_grad = True[0m
[0m(20) parameter.requires_grad = True[0m
[0m(21) parameter.requires_grad = True[0m
[0m(22) parameter.requires_grad = True[0m
[0m(23) parameter.requires_grad = True[0m
[0m(24) parameter.requires_grad = True[0m
[0m(25) parameter.requires_grad = True[0m
[0m(26) parameter.requires_grad = True[0m
[0m(27) parameter.requires_grad = True[0m
[0m(28) parameter.requires_grad = True[0m
[0m(29) parameter.requires_grad = True[0m
[0m(30) parameter.requires_grad = True[0m
[0m(31) parameter.requires_grad = True[0m
[0m(32) parameter.requires_grad = True[0m
[0m(33) parameter.requires_grad = True[0m
[0m(34) parameter.requires_grad = True[0m
[0m(35) parameter.requires_grad = True[0m
[0m(36) parameter.requires_grad = True[0m
[0m(37) parameter.requires_grad = True[0m
[0m(38) parameter.requires_grad = True[0m
[0m(39) parameter.requires_grad = True[0m
[0m(40) parameter.requires_grad = True[0m
[0m(41) parameter.requires_grad = True[0m
[0m(42) parameter.requires_grad = True[0m
[0m(43) parameter.requires_grad = True[0m
[0m(44) parameter.requires_grad = True[0m
[0m(45) parameter.requires_grad = True[0m
[0m(46) parameter.requires_grad = True[0m
[0m(47) parameter.requires_grad = True[0m
[0m(48) parameter.requires_grad = True[0m
[0m(49) parameter.requires_grad = True[0m
[0m(50) parameter.requires_grad = True[0m
[0m(51) parameter.requires_grad = True[0m
[0m(52) parameter.requires_grad = True[0m
[0m(53) parameter.requires_grad = True[0m
[0m(54) parameter.requires_grad = True[0m
[0m(55) parameter.requires_grad = True[0m
[0m(56) parameter.requires_grad = True[0m
[0m(57) parameter.requires_grad = True[0m
[0m(58) parameter.requires_grad = True[0m
[0m(59) parameter.requires_grad = True[0m
[0m(60) parameter.requires_grad = True[0m
[0m(61) parameter.requires_grad = True[0m
[0mProfiling Model ResNet18_CIFAR100_Conv2dRFFTFunction.[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTFunction step=0/12 (0.00%)[0m
[0m################################################################################[0m
[W kineto_shim.cpp:337] Profiler is not initialized: skipping step() invocation
[0m################################################################################[0m
[0mRunning Conv2dRFFTFunction step=1/12 (8.33%)[0m
[0m################################################################################[0m
[W kineto_shim.cpp:337] Profiler is not initialized: skipping step() invocation
[0m################################################################################[0m
[0mRunning Conv2dRFFTFunction step=2/12 (16.67%)[0m
[0m################################################################################[0m
[W kineto_shim.cpp:337] Profiler is not initialized: skipping step() invocation
[0m################################################################################[0m
[0mRunning Conv2dRFFTFunction step=3/12 (25.00%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTFunction step=4/12 (33.33%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTFunction step=5/12 (41.67%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTFunction step=6/12 (50.00%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTFunction step=7/12 (58.33%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTFunction step=8/12 (66.67%)[0m
[0m################################################################################[0m
[W CPUAllocator.cpp:219] Memory block of unknown size was allocated before the profiling started, profiler results will not include the deallocation event
[0m################################################################################[0m
[0mRunning Conv2dRFFTFunction step=9/12 (75.00%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTFunction step=10/12 (83.33%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTFunction step=11/12 (91.67%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mProfile trace saved to /home/edreis/Code/eduardo4jesus/Phd-Research/paper2/src/experiments_cifar100/.profiles/ResNet18_CIFAR100_Conv2dRFFTFunction_date-20240212-220618.json.[0m
[0mProfile saved to /home/edreis/Code/eduardo4jesus/Phd-Research/paper2/src/experiments_cifar100/.profiles/ResNet18_CIFAR100_Conv2dRFFTFunction_date-20240212-220618.pt.[0m
[0mProvided parameters: profile(function=Conv2dRFFTPhasorFunction timestamp=20240212-220618 batch_size=64 profile_name=ResNet18_CIFAR100_Conv2dRFFTPhasorFunction num_classes=100 skip_first=0 wait=4 warmup=4 active=4 repeat=1)[0m
[0mOriginal model architecture is ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc): Linear(in_features=512, out_features=1000, bias=True)
)[0m
[0mAdopted model architecture is ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc): Linear(in_features=512, out_features=100, bias=True)
)[0m
[0m(0) parameter.requires_grad = True[0m
[0m(1) parameter.requires_grad = True[0m
[0m(2) parameter.requires_grad = True[0m
[0m(3) parameter.requires_grad = True[0m
[0m(4) parameter.requires_grad = True[0m
[0m(5) parameter.requires_grad = True[0m
[0m(6) parameter.requires_grad = True[0m
[0m(7) parameter.requires_grad = True[0m
[0m(8) parameter.requires_grad = True[0m
[0m(9) parameter.requires_grad = True[0m
[0m(10) parameter.requires_grad = True[0m
[0m(11) parameter.requires_grad = True[0m
[0m(12) parameter.requires_grad = True[0m
[0m(13) parameter.requires_grad = True[0m
[0m(14) parameter.requires_grad = True[0m
[0m(15) parameter.requires_grad = True[0m
[0m(16) parameter.requires_grad = True[0m
[0m(17) parameter.requires_grad = True[0m
[0m(18) parameter.requires_grad = True[0m
[0m(19) parameter.requires_grad = True[0m
[0m(20) parameter.requires_grad = True[0m
[0m(21) parameter.requires_grad = True[0m
[0m(22) parameter.requires_grad = True[0m
[0m(23) parameter.requires_grad = True[0m
[0m(24) parameter.requires_grad = True[0m
[0m(25) parameter.requires_grad = True[0m
[0m(26) parameter.requires_grad = True[0m
[0m(27) parameter.requires_grad = True[0m
[0m(28) parameter.requires_grad = True[0m
[0m(29) parameter.requires_grad = True[0m
[0m(30) parameter.requires_grad = True[0m
[0m(31) parameter.requires_grad = True[0m
[0m(32) parameter.requires_grad = True[0m
[0m(33) parameter.requires_grad = True[0m
[0m(34) parameter.requires_grad = True[0m
[0m(35) parameter.requires_grad = True[0m
[0m(36) parameter.requires_grad = True[0m
[0m(37) parameter.requires_grad = True[0m
[0m(38) parameter.requires_grad = True[0m
[0m(39) parameter.requires_grad = True[0m
[0m(40) parameter.requires_grad = True[0m
[0m(41) parameter.requires_grad = True[0m
[0m(42) parameter.requires_grad = True[0m
[0m(43) parameter.requires_grad = True[0m
[0m(44) parameter.requires_grad = True[0m
[0m(45) parameter.requires_grad = True[0m
[0m(46) parameter.requires_grad = True[0m
[0m(47) parameter.requires_grad = True[0m
[0m(48) parameter.requires_grad = True[0m
[0m(49) parameter.requires_grad = True[0m
[0m(50) parameter.requires_grad = True[0m
[0m(51) parameter.requires_grad = True[0m
[0m(52) parameter.requires_grad = True[0m
[0m(53) parameter.requires_grad = True[0m
[0m(54) parameter.requires_grad = True[0m
[0m(55) parameter.requires_grad = True[0m
[0m(56) parameter.requires_grad = True[0m
[0m(57) parameter.requires_grad = True[0m
[0m(58) parameter.requires_grad = True[0m
[0m(59) parameter.requires_grad = True[0m
[0m(60) parameter.requires_grad = True[0m
[0m(61) parameter.requires_grad = True[0m
[0mProfiling Model ResNet18_CIFAR100_Conv2dRFFTPhasorFunction.[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTPhasorFunction step=0/12 (0.00%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTPhasorFunction step=1/12 (8.33%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTPhasorFunction step=2/12 (16.67%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTPhasorFunction step=3/12 (25.00%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTPhasorFunction step=4/12 (33.33%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTPhasorFunction step=5/12 (41.67%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTPhasorFunction step=6/12 (50.00%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTPhasorFunction step=7/12 (58.33%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTPhasorFunction step=8/12 (66.67%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTPhasorFunction step=9/12 (75.00%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTPhasorFunction step=10/12 (83.33%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mRunning Conv2dRFFTPhasorFunction step=11/12 (91.67%)[0m
[0m################################################################################[0m
[0m################################################################################[0m
[0mProfile trace saved to /home/edreis/Code/eduardo4jesus/Phd-Research/paper2/src/experiments_cifar100/.profiles/ResNet18_CIFAR100_Conv2dRFFTPhasorFunction_date-20240212-220618.json.[0m
[0mProfile saved to /home/edreis/Code/eduardo4jesus/Phd-Research/paper2/src/experiments_cifar100/.profiles/ResNet18_CIFAR100_Conv2dRFFTPhasorFunction_date-20240212-220618.pt.[0m
[0m################ Profiling ended at 20240212-221004 ################.[0m
