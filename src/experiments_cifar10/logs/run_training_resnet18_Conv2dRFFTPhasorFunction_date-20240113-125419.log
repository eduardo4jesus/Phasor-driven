Provided parameters: main(total_num_epochs=1,freeze_features_epochs=0, batch_size=64)
Model orginal architecture is ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc): Linear(in_features=512, out_features=1000, bias=True)
)
Model classifier architecture is ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc): Linear(in_features=512, out_features=10, bias=True)
)
Features not frozen on epoch 0
Training: epoch=0 step=19/782 loss=0.05502 accuracy=98.59375 runtime_forward_ms=2413.15101 runtime_backward_ms=4671.01119.
Training: epoch=0 step=39/782 loss=0.06533 accuracy=98.04688 runtime_forward_ms=2400.86630 runtime_backward_ms=4669.86143.
Training: epoch=0 step=59/782 loss=0.05460 accuracy=98.59375 runtime_forward_ms=2400.98279 runtime_backward_ms=4669.93810.
Training: epoch=0 step=79/782 loss=0.05693 accuracy=97.89062 runtime_forward_ms=2400.93566 runtime_backward_ms=4669.91486.
Training: epoch=0 step=99/782 loss=0.04613 accuracy=98.90625 runtime_forward_ms=2400.99562 runtime_backward_ms=4669.99406.
Training: epoch=0 step=119/782 loss=0.03867 accuracy=98.90625 runtime_forward_ms=2400.92226 runtime_backward_ms=4669.69347.
Training: epoch=0 step=139/782 loss=0.04728 accuracy=98.59375 runtime_forward_ms=2400.95385 runtime_backward_ms=4669.81740.
Training: epoch=0 step=159/782 loss=0.02805 accuracy=99.53125 runtime_forward_ms=2400.99591 runtime_backward_ms=4669.76599.
Training: epoch=0 step=179/782 loss=0.03991 accuracy=98.90625 runtime_forward_ms=2400.98811 runtime_backward_ms=4669.82564.
Training: epoch=0 step=199/782 loss=0.04513 accuracy=98.90625 runtime_forward_ms=2400.94330 runtime_backward_ms=4669.83183.
Training: epoch=0 step=219/782 loss=0.03681 accuracy=99.37500 runtime_forward_ms=2400.96695 runtime_backward_ms=4669.86818.
Training: epoch=0 step=239/782 loss=0.03351 accuracy=99.06250 runtime_forward_ms=2400.94574 runtime_backward_ms=4669.86656.
Training: epoch=0 step=259/782 loss=0.03241 accuracy=99.45312 runtime_forward_ms=2400.90968 runtime_backward_ms=4669.87797.
Training: epoch=0 step=279/782 loss=0.04118 accuracy=98.35938 runtime_forward_ms=2400.92218 runtime_backward_ms=4669.82235.
Training: epoch=0 step=299/782 loss=0.03606 accuracy=98.90625 runtime_forward_ms=2401.00304 runtime_backward_ms=4669.83449.
Training: epoch=0 step=319/782 loss=0.04191 accuracy=99.06250 runtime_forward_ms=2400.95923 runtime_backward_ms=4669.78379.
Training: epoch=0 step=339/782 loss=0.03207 accuracy=99.14062 runtime_forward_ms=2401.08451 runtime_backward_ms=4670.12311.
Training: epoch=0 step=359/782 loss=0.03189 accuracy=98.98438 runtime_forward_ms=2401.06548 runtime_backward_ms=4669.92527.
Training: epoch=0 step=379/782 loss=0.02927 accuracy=99.29688 runtime_forward_ms=2401.06864 runtime_backward_ms=4670.06524.
Training: epoch=0 step=399/782 loss=0.03569 accuracy=99.14062 runtime_forward_ms=2401.05712 runtime_backward_ms=4669.82819.
Training: epoch=0 step=419/782 loss=0.02907 accuracy=99.29688 runtime_forward_ms=2400.98085 runtime_backward_ms=4669.78970.
Training: epoch=0 step=439/782 loss=0.03180 accuracy=99.14062 runtime_forward_ms=2400.95191 runtime_backward_ms=4669.77821.
Training: epoch=0 step=459/782 loss=0.03043 accuracy=99.21875 runtime_forward_ms=2401.02580 runtime_backward_ms=4669.75720.
Training: epoch=0 step=479/782 loss=0.03573 accuracy=98.98438 runtime_forward_ms=2400.95454 runtime_backward_ms=4669.77074.
Training: epoch=0 step=499/782 loss=0.02785 accuracy=99.53125 runtime_forward_ms=2400.94664 runtime_backward_ms=4669.82641.
Training: epoch=0 step=519/782 loss=0.02960 accuracy=99.21875 runtime_forward_ms=2400.99986 runtime_backward_ms=4669.78256.
Training: epoch=0 step=539/782 loss=0.02710 accuracy=99.53125 runtime_forward_ms=2400.94112 runtime_backward_ms=4669.80194.
Training: epoch=0 step=559/782 loss=0.03443 accuracy=98.82812 runtime_forward_ms=2400.95283 runtime_backward_ms=4669.84289.
Training: epoch=0 step=579/782 loss=0.03014 accuracy=98.82812 runtime_forward_ms=2400.88341 runtime_backward_ms=4669.80483.
Training: epoch=0 step=599/782 loss=0.03382 accuracy=98.98438 runtime_forward_ms=2400.96935 runtime_backward_ms=4669.77701.
Training: epoch=0 step=619/782 loss=0.02775 accuracy=99.53125 runtime_forward_ms=2401.03734 runtime_backward_ms=4669.99824.
Training: epoch=0 step=639/782 loss=0.02886 accuracy=99.45312 runtime_forward_ms=2401.02398 runtime_backward_ms=4670.02044.
Training: epoch=0 step=659/782 loss=0.02463 accuracy=99.37500 runtime_forward_ms=2401.03114 runtime_backward_ms=4669.96784.
Training: epoch=0 step=679/782 loss=0.03200 accuracy=99.14062 runtime_forward_ms=2401.01368 runtime_backward_ms=4669.94322.
Training: epoch=0 step=699/782 loss=0.01903 accuracy=99.84375 runtime_forward_ms=2400.95352 runtime_backward_ms=4669.89621.
Training: epoch=0 step=719/782 loss=0.03232 accuracy=98.90625 runtime_forward_ms=2400.94125 runtime_backward_ms=4669.88351.
Training: epoch=0 step=739/782 loss=0.03185 accuracy=99.14062 runtime_forward_ms=2401.02554 runtime_backward_ms=4670.02293.
Training: epoch=0 step=759/782 loss=0.02441 accuracy=99.45312 runtime_forward_ms=2400.92273 runtime_backward_ms=4669.76642.
Training: epoch=0 step=779/782 loss=0.02627 accuracy=99.29688 runtime_forward_ms=2400.89935 runtime_backward_ms=4669.69794.
Validation: epoch=0 training_step=781 loss=0.14701 accuracy=95.05000 runtime_forward_ms=2387.05190.
--- End of Epoch: epoch=0 duration_training=5533.828640587628 duration_validation=376.48265332356095 training_step=781 training_loss=0.02627 training_accuracy=99.29688 validation_loss=0.14701 validation_accuracy=95.05000.
